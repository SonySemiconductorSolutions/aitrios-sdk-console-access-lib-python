# coding: utf-8

"""
    AITRIOS | Console

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.4.1
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from aitrios_console_rest_client_sdk_primitive import schemas  # noqa: F401


class SetImageConfigurationJsonBody(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    SetImageConfiguration JsonBody.
    """


    class MetaOapg:
        
        class properties:
            frame_rate = schemas.IntSchema
            drive_mode = schemas.IntSchema
            __annotations__ = {
                "frame_rate": frame_rate,
                "drive_mode": drive_mode,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["frame_rate"]) -> MetaOapg.properties.frame_rate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["drive_mode"]) -> MetaOapg.properties.drive_mode: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["frame_rate", "drive_mode", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["frame_rate"]) -> typing.Union[MetaOapg.properties.frame_rate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["drive_mode"]) -> typing.Union[MetaOapg.properties.drive_mode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["frame_rate", "drive_mode", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        frame_rate: typing.Union[MetaOapg.properties.frame_rate, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        drive_mode: typing.Union[MetaOapg.properties.drive_mode, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'SetImageConfigurationJsonBody':
        return super().__new__(
            cls,
            *_args,
            frame_rate=frame_rate,
            drive_mode=drive_mode,
            _configuration=_configuration,
            **kwargs,
        )
